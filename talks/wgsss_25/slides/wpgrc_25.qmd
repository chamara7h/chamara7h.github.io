---
format: 
  revealjs:
    slide-number: c/t
    width: 1920
    height: 1080
    logo: "images/logo.png"
    footer: "[WHAT WAS LOST: Estimating censored demand in family planning supply chains with the Truncated Conformal Kalman Filter](https://chamara7h.github.io/talks/)"
    css: theme.css
    theme: simple
    echo: true
execute:
  warning: false
  echo: false
---   

<div style="position: relative; width: 100%; height: 100%;">
  <!-- Cardiff logo top-left -->
  <img
    src="images/cardiff_logo.png"
    alt="Cardiff University"
    style="
      position: absolute;
      top: 40px;
      left: 0px;
      width: 110px;
      height: auto;
    "
  />

  <!-- Data Lab logo a bit to the right -->
  <img
    src="images/logo_white.png"
    alt="Data Lab for Social Good"
    style="
      position: absolute;
      top: 40px;
      left: 150px;
      width: 225px;
      height: auto;
    "
  />
  
  <img
    src="images/ukri.png"
    alt="ukri"
    style="
      position: absolute;
      top: 40px;
      left: 415px;
      width: 350px;
      height: auto;
    "
  />
  
  <img
    src="images/wgss.png"
    alt="wgsss"
    style="
      position: absolute;
      top: 40px;
      left: 805px;
      width: 75px;
      height: auto;
    "
  />
  
  <img
    src="images/usaid.png"
    alt="usaid"
    style="
      position: absolute;
      top: 40px;
      left: 930px;
      width: 110px;
      height: auto;
    "
  />
  
  
<br>
<br>
<br>
<br>
<br>


# WHAT WAS LOST {background-image="images/cover1.png" background-size="cover" background-color="#4f6952"}

<h2>
Estimating censored demand in family planning supply chains with the Truncated Conformal Kalman Filter
<h2>

<br>

<h4>
  Harsha Halgamuwe Hewage <br>
  Data Lab for Social Good Research Group, Cardiff University, UK 
</h4>

<h5>
Lead Supervisor: Prof. Bahman Rostami-Tabar <br>
Co Supervisors: Prof. Aris Syntetos & Dr. Federico Liberatore
<h5>

<br>

2025-09-16

::: aside
Image generated using 04-mini-high
:::

</div>

```{r}
#| echo: false

library(knitr)
options(knitr.graphics.auto_pdf = TRUE)
```

```{r}
#| label: setup
#| context: setup
#| include: false

# 1. list your CRAN packages
required_packages <- c(
  "tidyverse",
  "knitr",
  "kableExtra",
  "ggthemes",
  "patchwork",
  "tsibble",
  "feasts",
  "viridis",
  "showtext",
  "ggdist",
  'tsutils',
  'here'
)

# 2. install any that are missing
new_packages <- required_packages[!required_packages %in% installed.packages()[, "Package"]]
if (length(new_packages)) {
  install.packages(new_packages)
}

# 3. load them
invisible(lapply(required_packages, library, character.only = TRUE))

# 4. register and activate the Assistant font
font_add_google("Assistant", "C:/Windows/Fonts/Assistant-Regular.ttf")
showtext_auto()
```

## Outline

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 40%; display: flex; justify-content: flex-start;"}
<img src="images/outline.png"
     alt="Outline graphic"
     style="max-width: 95%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 60%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

::: {.step data-step="01"}
<div class="step-content">
  <h3>What was never [COUNTED . . .]{.highlight-blue}</h3>
</div>
::: 

::: {.step data-step="02"}
<div class="step-content">
  <h3>The fundamental question</h3>
</div>
:::

::: {.step data-step="03"}
<div class="step-content">
  <h3>What we are going to do</h3>
</div>
:::

::: {.step data-step="04"}
<div class="step-content">
  <h3>Empirical evaluation</h3>
</div>
:::

::: {.step data-step="05"}
<div class="step-content">
  <h3>What [NEXT?]{.highlight-blue}</h3>
</div>
:::

:::

::::

::: aside
Image generated using 04-mini-high
:::

# WHAT WAS NEVER COUNTED... {background-color="#4D59AC"}

## Seen the `UNSEEN`

### `Human story`: What data misses

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: flex-start;"}
<img src="images/story_1.png"
     alt="Outline graphic"
     style="max-width: 100%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

[Nilu]{.highlight-blue-big} went to a pharmacy for Product A. 
It wasn't in stock.

<br>

The system logs it as 
[zero demand.]{.highlight-blue-big}

<br>

But the need was real. The system just missed it.

<br>

This creates broken trust and leads to create

[UNMET DEMAND.]{.highlight-blue-big}

:::

::::

::: aside
Image generated using 04-mini-high
:::

## Seen the `UNSEEN`

### `Analytical reality`: Why this matters

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: flex-start;"}
<img src="images/story_1a.png"
     alt="Outline graphic"
     style="max-width: 100%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

In supply chains like this, Stockouts [censor demand.]{.highlight-blue-big}  

Observed sales ≠ actual demand.

<br>

Inventory decisions based on this [false signal?]{.highlight-blue-big}  
Understocking → more stockouts.

<br>

Forecasts don't just underperform.
They miss the whole story.

<br>

A lost sale = [a lost opportunity for care.]{.highlight-blue-big}

:::

::::

::: aside
Image generated using 04-mini-high
:::

## Contraceptive products aren't easily `SUBSTITUTED`

<br>

<img src="images/types.png"
     alt="Story panel"
     style="max-width: 80%; height: auto; display: block;" />

::: aside
*Percent of women who will get pregnant within the first year of typical use.
:::

## The `BIG PICTURE`

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: left;"}
<img src="images/story_4.png"
     alt="Story panel"
     style="max-width: 100%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: left; text-align: left;"}
In reality...

There are more than 

[218 million women]{.highlight-blue-big}

like  Nilu still have an unmet need for family planning.

Ultimately, this results in dropouts, unwanted pregnancies, and almost [7 million hospitalizations]{.highlight-blue-big} each year in developing countries.
:::

::::

::: aside
Image generated using 04-mini-high

Sources: USAID, 2020; PATH, 2019; Mukasa et al., 2017; Gilda et al., 2016 
:::

## Why this is `critical`

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 40%; display: flex; justify-content: left;"}
<img src="images/background.png"
     alt="Story panel"
     style="max-width: 95%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 60%; display: flex; flex-direction: column; justify-content: left; text-align: left;"}

::: {.fragment fragment-index=0}
- `Censorship is structural` — stockouts and interruptions are common in FPSC, not rare events.
:::

::: {.fragment fragment-index=1}
- `Field insight` — in Côte d'Ivoire and Ethiopia, demand planners repeatedly flagged stockouts as the key barrier.
:::

::: {.fragment fragment-index=2}
- `Forecasting fails under censorship` — observed sales understate true demand.
:::

::: {.fragment fragment-index=3}
- `The literature split` - prior research often separates forecasting from inventory decisions.
:::

::: {.fragment fragment-index=4}
- `Resources are tightening` — with USAID withdrawal, high service levels must be achieved efficiently.
:::

:::

::::

::: aside
Image generated using 04-mini-high

Sources: Bijvank et al., 2011; Karimi et al., 2021; Thanos et al., 2022 ; Trapero et al., 2024
:::

# THE FUNDEMENTAL QUESTION {background-color="#4D59AC"}

## Key definitions

<br>

- `Stockouts`: Periods when demand is higher than available inventory, leading to censored observations of demand.

- `Interruptions`: Periods when no products are issued despite available stock, thus artificially recorded as zero demand.

- `Censored Demand`: Demand occurring during periods when products are unavailable (stockouts or interruptions), thus not fully observable.

- `True Demand`: Actual demand that would have occurred if sufficient stock was available or no service interruptions.

## Bridging forecasting, inventory, and impact

<br>

How can a demand forecasting model that explicitly handles censored demand due to stockouts and service interruptions improve inventory performance and public health outcomes in contraceptive supply chains?

```{r}
#| echo: false
#| warning: false
#| label: fig-plot
#| out.width: "70%"
#| fig-width: 14
#| fig-height: 5
#| fig-cap: "Censorship scenarios in family planning supply chains."

synthetic_tsibble <- readRDS('data/tidy_data/synthetic_data.rds')

# pick one series per

selected <- synthetic_tsibble |>
  filter(store == 'S51', product == 'P8')

# grab the full time‐slice for those series

plot_df <- synthetic_tsibble |>
  semi_join(selected, by = c("series_category","series_type","store","product")) |> 
  mutate(series_type     = str_to_sentence(series_type),
         series_category = str_to_sentence(series_category)) |> 
  group_by(series_category, series_type, store, product) |>
  arrange(date) |>
  mutate(period = row_number()) |>
  ungroup()


# build shading rectangles for each contiguous run of censorship

shade_df <- plot_df |>
  as_tibble() |> 
  arrange(series_category, series_type, store, product, period) |>
  group_by(series_category, series_type, store, product) |>
  mutate(
    run_id = cumsum(
      c(TRUE, censorship_type[-1] != censorship_type[-n()])  
    )
  ) |>
  group_by(series_category, series_type, store, product, run_id, censorship_type) |>
  summarize(start = min(period), end = max(period), .groups = "drop") |>
  filter(censorship_type != "none")

# plot

ggplot() +
  geom_rect(
    data = shade_df,
    aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = censorship_type), 
    inherit.aes = FALSE, alpha = 0.25) +
  
  geom_rect(data = shade_df |> 
              filter(start == end),
            aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, colour = censorship_type),
            inherit.aes = FALSE, fill = NA,
            size = 0.5, alpha = 0.05, show.legend = FALSE) +
  
  geom_line(data = plot_df,
            aes(x = period, y = actual_demand, colour = "Actual", linetype = "Actual"),
            size = 0.7) +
  
  geom_line(data = plot_df,
            aes(x = period, y = observed_demand, colour = "Observed", linetype = "Observed"),
            size = 0.7) +
  
  scale_fill_manual(name = "Censorship type", values = c(censored = "#E69F00", disruption = "#0072B2"),
                    labels = c(censored   = "Stockout", disruption = "Interruption")) +
  
  scale_colour_manual(name = "Demand", 
                      values = c(Actual = "black", Observed = "red", censored = "#E69F00", disruption = "#0072B2"),
                      breaks = c("Actual", "Observed")) +
  
  scale_linetype_manual(name = "Demand",values = c(Actual = "solid", Observed = "dashed")) +
  
  labs(x = "Month", y = "Demand") +
  theme_few(base_family = "Assistant", base_size = 24) +
  theme(
    strip.text         = element_text(face = "bold"),
    axis.title = element_text(size = 24, face = "bold"),
    panel.grid.minor   = element_blank(),
    panel.border       = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing      = unit(0.5, "lines")
  )



```

# WHAT WE ARE GOING TO DO {background-color="#4D59AC"}

## How we can fill the gaps

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 40%; display: flex; justify-content: left;"}
<img src="images/rqs.png"
     alt="Story panel"
     style="max-width: 95%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 60%; display: flex; flex-direction: column; justify-content: left; text-align: left;"}

::: {.fragment fragment-index=0}
::: {.fragment fragment-index=0}
- <span style="color:#0072B2;"><strong>RQ1:</strong></span> How accurately can a Tobit Kalman Filter with conformal prediction estimate true demand under censorship?
:::
:::

::: {.fragment fragment-index=1}
- <span style="color:#0072B2;"><strong>RQ2:</strong></span> How does demand reconstruction improve inventory performance and healthcare impact compared to baseline planning methods?
:::

::: {.fragment fragment-index=2}
- <span style="color:#0072B2;"><strong>RQ3:</strong></span> How do planner-adjusted forecasts compare to model-based methods in balancing availability and inventory efficiency?
:::

:::

::::

::: aside
Image generated using 04-mini-high
:::

## Overview of the experimental framework

<br>

![](images/04a-empirical_framework.svg){fig-align="center"}

## Truncated Conformal Kalman Filter (TCKF)

::: {.algorithm}
**`State-Space Formulation`**

$$
X_t = F X_{t-1} + \eta_t, \quad \eta_t \sim \mathcal{N}(0, Q_t)
$$

* $X_t = [\ell_t, \tau_t, \gamma_t]^T$: level, trend, seasonality
* $F$: state transition matrix with seasonal decay and trend

<br>

**`Observation Equation with Censorship`**

$$
y_t =
\begin{cases}
H X_t + \nu_t & \text{if uncensored} \\
0 & \text{if fully censored} \\
\min(H X_t, s_t) & \text{if partially censored}
\end{cases}
$$

* $H = [1, 0, 1]$: maps level and seasonality to observation
* $s_t$: stock available at time $t$

<br>

**`Kalman Prediction Step`**

$$
\mu_t = H \hat{X}_{t|t-1}, \quad \sigma_t^2 = H P_{t|t-1} H^T + R
$$

:::

## Truncated Conformal Kalman Filter (TCKF)

::: {.algorithm}
**`Censored Observation Update`**

$$
\hat{y}_t = \mu_t + \sigma_t \cdot \frac{\phi(z_t)}{1 - \Phi(z_t)}, \quad z_t = \frac{y_t - \mu_t}{\sigma_t}
$$

$$
\hat{X}_{t|t} = \hat{X}_{t|t-1} + K_t (\hat{y}_t - \mu_t)
$$

* Uses expectation of truncated Gaussian
* For fully censored ($y_t = 0$), skip state update; propagate uncertainty

<br>

**`Conformal Prediction for Interval Estimation`**

$$
D_t \in [\max(0, \mu_t - q_\alpha), \mu_t + q_\alpha]
$$

* Residuals from uncensored periods used to calibrate $q_\alpha$
* Ensures valid coverage without assuming normality

<br>

**Note on Initialization:**
Initial state vector $X_0 = [\ell_0, \tau_0, \gamma_0]^T$ is extracted via STL decomposition from uncensored periods.

:::

## Performance evaluation - `Forecast`

::: {.algorithm}

**`Point predictions`**

$$
Forecast\ Value\ Added = (1 -Rel\ RMSE) \times 100\%
$$
Values above 1 indicate better performance than `TCKF`.

$$
Rel\ RMSE = \frac{RMSE_{\text{Method}}}{RMSE_{\text{TCKF}}}
$$

$$
RMSE = \sqrt{\frac{1}{n} \sum_{t=1}^{n} (\hat{y}_t - y_t)^2}
$$

**`Probabilistic predictions`**

The pinball loss at time $t$ for quantile level $p$ is defined as:

$$
Q_{p,t} =
\begin{cases}
2(1 - p)(\hat{f}_{p,t} - y_t), & \text{if } y_t < \hat{f}_{p,t} \\
2p(y_t - \hat{f}_{p,t}), & \text{if } y_t \geq \hat{f}_{p,t}
\end{cases}
$$

<br>

$$
\text{Skill Score} = \frac{\text{Pinball Score}_{\text{TCKF}} - \text{Pinball Score}_{\text{Method}}}{\text{Pinball Score}_{\text{TCKF}}} \times 100\%
$$

Values above 1 indicate better performance than `TCKF`.

:::

## Performance evaluation - `Inventory`

<br>

::: {.algorithm}

**`Cycle Service Level (CSL)`**: proportion of periods in which stock was available

$$
  CSL = \frac{1}{N} \sum_{t=1}^{N} \mathbb{1}(in\_stock_t = 1)
$$ 

**`Stock-Out Rate (SOR)`**: proportion of periods experiencing a stockout

$$
  SOR = \frac{1}{N} \sum_{t=1}^{N} \mathbb{1}(stockout\_ev_t = 1)
$$ 

**`Inventory Turnover (IT)`**: average stock relative to the target level

$$
  IT = \frac{1}{N} \sum_{t=1}^{N} \frac{average\_stock_t}{target\_stock_t}, \quad \text{if } target\_stock_t > 0
$$ 
:::

## Performance evaluation - `Inventory`

::: {.algorithm}

**`Relative CSL (Rel CSL)`**:

$$
  Rel\ CSL =
  \begin{cases}
  \frac{CSL - CSL_{TCKF}}{CSL_{TCKF}}, & CSL_{TCKF} \ne 0 \\
  CSL - CSL_{TCKF}, & \text{otherwise}
  \end{cases}
$$

**`Relative SOR (Rel SOR)`**:

$$
  Rel\ SOR =
  \begin{cases}
  \frac{SOR_{TCKF} - SOR}{SOR_{TCKF}}, & SOR_{TCKF} > 0 \\
  0, & SOR_{TCKF} = 0 \land SOR = 0 \\
  -SOR, & SOR_{TCKF} = 0 \land SOR > 0
  \end{cases}
$$ 

**`Relative IT (Rel IT)`**:

Let $\Delta = |IT_{TCKF} - 1|$, then:

$$
  Rel\ IT =
  \begin{cases}
  0, & IT = 0 \land IT_{TCKF} = 0 \\
  IT - 1, & IT_{TCKF} = 1 \\
  1 - \frac{|IT - 1|}{\Delta}, & \text{otherwise}
  \end{cases}
$$ 

<br>

The composite **`Inventory Value Added`** score aggregates these components:

$$
IVA = w_{CSL} \cdot Rel\ CSL + w_{SOR} \cdot Rel\ SOR + w_{IT} \cdot Rel\ IT
$$

Values above 1 indicate better performance than `TCKF`.

:::

## Performance evaluation - `Healthcare impact`

<br>

::: {.algorithm}

Stockout of one product can decrease mCPR by **`6.5% points`**

$$
\Delta mCPR = 0.065 \times M \times (\text{Stockout Rate}_{\text{method}} - \text{Stockout Rate}_{\text{TCKF}})
$$

<br>

$$
\text{Users Lost} = \Delta mCPR \times \text{WRA Population}
$$ 

where $\text{WRA Population}$ is the number of women of reproductive age, and $M$ is the number of distinct products considered.

<br>

-   Maternal deaths averted: $\frac{\text{Users Lost}}{3153}$
-   Infant deaths averted: $\frac{\text{Users Lost}}{251}$
-   Abortions averted: $\frac{\text{Users Lost}}{6.46}$
-   Unintended pregnancies averted: $\frac{\text{Users Lost}}{3.63}$

:::

::: aside
Sources: Rosen et al. (2018), Singh et al. (2009), Karim et al. (2008), Wang and Wang (2012), and Ross and Stover (2012)

RHSC Impact Calculator: [https://www.rhsupplies.org/activities-resources/tools/reducing-stockouts-impact-calculator](https://www.rhsupplies.org/activities-resources/tools/reducing-stockouts-impact-calculator)
:::

# WHAT DID WE FIND {background-color="#4D59AC"}

## Empirical evaluation

<br>

- **`Data source`**: Monthly LMIS records from Côte d’Ivoire (Jan 2016–Dec 2019)

- **`Scope`**: 507 site–product time series covering 9 contraceptive methods (male & female condoms, emergency contraception, oral pills, injectables, implants, IUDs)

- **`Training window`**: January 2016 – December 2018

- **`Test window`**: January 2019 – December 2019

- **`Cross-validation`**: Rolling-origin evaluation—re-train each month on all prior data, forecast 1-month ahead across the test year


## Empirical data exploration 

```{r}
#| include: false

# pick one series per (category × type)

stock_tsb <- readRDS('data/tidy_data/stock_tsb_filtered.rds') |> 
  as_tibble() |> 
  mutate(censorship_type = case_when(stock_out_indicator == 1 ~ 'censored',
                                     interruption_indicator == 1 ~ 'disruption',
                                     .default = 'none'),
         censorship_type = as.factor(censorship_type)) |> 
  select(date, site_code, product_code, censorship_type,
         stock_initial, stock_receieved, stock_distributed, stock_adjustment, stock_end,
         projected_average_monthly_consumption, stock_required , stock_ordered, corrected_cmm) |> 
  as_tsibble(index = date, key = c(site_code, product_code)) |> 
  fill_gaps(.full = TRUE) |>  # add zeros to cold staters
  mutate(censorship_type = replace_na(censorship_type, 'none'),
         across(where(is.numeric), ~ replace_na(.x, 0)),
         model = 'system_gen')

idi_stat <- function(x){
  nz <- which(x > 0); if (length(nz) < 2) return(NA_real_); mean(diff(nz))
}
cv2_pos <- function(x){
  y <- x[x > 0]; if (length(y) < 2) return(NA_real_); (sd(y)/mean(y))^2
}

stock_feat <- stock_tsb |>
  features(stock_distributed, feat_stl)

idi_cv2 <- stock_tsb  |> 
  as_tibble()  |>   
  group_by(site_code, product_code) |> 
  summarise(
    IDI = idi_stat(stock_distributed),   
    CV2 = cv2_pos(stock_distributed),
    .groups = "drop"
  )
```

```{r}
#| label: fig-ts_feat2
#| echo: false
#| cache: true
#| out.width: "100%"
#| fig-width: 20
#| fig-height: 12
#| fig-cap: "Timeseries characteristics of the realworld dataset used in the empirical evaluation."
#| fig-subcap: "Representative time series for each demand type; (b) Distribution of time series by trend and seasonality strength and; (c) Intermittency classification based on IDI and CV^2 thresholds."

selected <- tibble(
  site_code = c("C2062", "C1073", "C4026", "C4061", "C1101", 'C2070'),
  product_code = c("AS27000", "AS27133", "AS27133", "AS27138", "AS27137", 'AS46000')
)

# grab the full time‐slice for those series

plot_df <- stock_tsb |>
  semi_join(selected, by = c("site_code","product_code")) |> 
  group_by(site_code, product_code) |>
  arrange(date) |>
  mutate(period = row_number()) |>
  ungroup()


# build shading rectangles for each contiguous run of censorship

shade_df <- plot_df |>
  as_tibble() |> 
  arrange(site_code, product_code, period) |>
  group_by(site_code, product_code) |>
  mutate(
    run_id = cumsum(
      c(TRUE, censorship_type[-1] != censorship_type[-n()])  
    )
  ) |>
  group_by(site_code, product_code, run_id, censorship_type) |>
  summarize(start = min(period), end = max(period), .groups = "drop") |>
  filter(censorship_type != "none")

# plot

p1 <- ggplot() +
  geom_rect(
    data = shade_df,
    aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, fill = censorship_type), 
    inherit.aes = FALSE, alpha = 0.25) +
  
  geom_rect(data = shade_df |> 
              filter(start == end),
            aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf, colour = censorship_type),
            inherit.aes = FALSE, fill = NA,
            size = 0.5, alpha = 0.05, show.legend = FALSE) +
  
  geom_line(data = plot_df,
            aes(x = period, y = stock_distributed, colour = "Stock distributed"),
            size = 1) +
  
  facet_wrap(~site_code, nrow = 2, scales = 'free') +
  
  scale_fill_manual(name = "Censorship type", values = c(censored = "#E69F00", disruption = "#0072B2"),
                    labels = c(censored   = "Stockout", disruption = "Interruption")) +
  
  scale_colour_manual(name   = " ", values = c("Stock distributed" = "black", censored = "#E69F00", disruption = "#0072B2"),
                      breaks = ("Stock distributed")) +
  
  labs(x = "Month", y = "Qty", caption = '(a)') +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    strip.text         = element_text(face = "bold"),
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor   = element_blank(),
    panel.border       = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing      = unit(0.5, "lines")
  )

# ts feat

p2 <- stock_feat |>
  ggplot(mapping = aes(x= trend_strength, y = seasonal_strength_year, color = product_code)) +
  geom_point(size = 1.75, alpha = 0.75) + 
  labs(x = "Strength of trend", y = "Strength of seasonality", color = 'Product code', caption = '(b)') +
  scale_color_viridis_d(option = "D") + # Use the viridis palette
  ggthemes::theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    strip.text         = element_text(face = "bold"),
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor   = element_blank(),
    panel.border       = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing      = unit(0.5, "lines")
  )

# cv2

p3 <- idi_cv2 |>
  ggplot(mapping = aes(x= IDI, y = CV2, color = product_code)) +
  geom_point(size = 1.75, alpha = 0.75) + 
  # threshold lines
  geom_vline(xintercept = 4/3, linetype = "dashed") +
  geom_hline(yintercept = 0.5, linetype = "dashed") +

  # add text labels right next to the lines
  annotate("text",
           x    = 4/3,
           y    = 8,
           label = "IDI = 4/3",
           hjust = -0.1,          # nudge it just to the right
           vjust =  0,          # and align at the top
           size  = 10,
           family = "Assistant") +
  annotate("text",
           x    = 10,
           y    = 2,
           label = expression(CV^2 ~ "= 0.5"),
           hjust =  1.1,          # nudge it to the right edge
           vjust = 1.1,          # nudge it a bit above the line
           size  = 10,
           family = "Assistant") +

  # force the axes to include those exact ticks
  scale_x_continuous(breaks = scales::extended_breaks()(c(0, max(idi_cv2$IDI))),
                     minor_breaks = NULL) +
  scale_y_continuous(breaks = scales::extended_breaks()(c(0, max(idi_cv2$CV2))),
                     minor_breaks = NULL) +

  labs(x = "IDI",
       y = expression(CV^2),
       caption = '(c)') +
  scale_color_viridis_d(option = "D", guide = FALSE) + # Use the viridis palette
  ggthemes::theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    strip.text         = element_text(face = "bold"),
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor   = element_blank(),
    panel.border       = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing      = unit(0.5, "lines")
  ) +
  coord_cartesian(xlim = c(0, 10))

p1 / (p2 | p3) +
  plot_layout(guides = "collect") &
  theme(legend.position = "right")

```

## Overall forecasting performance across models

<br>

```{r}
#| include: false

rel_iva <- readRDS('data/results/emp_rel_iva.rds')

num_ex_metrics_all <- readRDS('data/results/emp_ex_metrics_origin_all.rds')

# pick 12 distinct, colour-blind–safe colours
model_cols <- viridis(17)

names(model_cols) <- c("TCKF", 'Site ERP', 'System Generated', 'Demand Planner', "Naive","Mean", 'Censored Mean', 'Syntetos-Boylan Approx', 'ETS', 'ARIMA', 'Censored ARIMA',
                       'Linear Regression', 'Censored Linear Regression', 'LightGBM', 'Censored LightGBM',
                       'TimeGPT', 'Censored TimeGPT')

pal <- c(
  model_cols,
  "Stock Distributed" = "black"
)

all_series <- c("TCKF", 'Site ERP', 'System Generated', 'Demand Planner', "Naive","Mean", 'Censored Mean', 'Syntetos-Boylan Approx', 'ETS', 'ARIMA', 'Censored ARIMA',
                'Linear Regression', 'Censored Linear Regression', 'LightGBM', 'Censored LightGBM',
                'TimeGPT', 'Censored TimeGPT', "Stock Distributed")

single_col <- "#BFBFBF"

single_col2 <- "black"

# create a named vector where every entry is that same colour
pal_uniform <- setNames(
  rep(single_col, length(all_series)),
  all_series
)

pal_black <- setNames(
  rep(single_col2, length(all_series)),
  all_series
)

```

```{r}
#| echo: false
#| results: asis

num_ex_metrics_all |> 
  select(model, fva,
         qs80_sc, qs85_sc, qs90_sc, qs95_sc, qs97.5_sc) |> 
  group_by(model) |> 
  summarise(
    across(
      where(is.numeric),
      list(
        mean   = ~ round(mean(. , na.rm = TRUE), 2)
      ),
      .names = "{.col}_{.fn}"
    ),
    .groups = "drop"
  ) |> 
  rename('Method' = model, 'Mean FVA' = fva_mean,
         'Mean Skill Score (q80)' = qs80_sc_mean,
         'Mean Skill Score (q85)' = qs85_sc_mean,
         'Mean Skill Score (q90)' = qs90_sc_mean,
         'Mean Skill Score (q95)' = qs95_sc_mean,
         'Mean Skill Score (q97.5)' = qs97.5_sc_mean) |> 
  arrange(desc(`Mean FVA`)) |> 
  mutate(across(everything(), as.character)) |>
  add_row(
    'Method'                         = "",
    'Mean FVA'                     = "",
    'Mean Skill Score (q80)'                      = "",
    'Mean Skill Score (q85)'          = "",
    'Mean Skill Score (q90)' = "",
    'Mean Skill Score (q95)' = '',
    'Mean Skill Score (q97.5)' = ''
  ) |> 
  kbl(
    format     = "html",
    escape     = FALSE,
    table.attr = 'class="table-custom"',
    align      = "lrrrrr"
  ) |>
  kable_styling(full_width = FALSE, font_size = 28)

```

## Significance test - `point forecast`

```{r}
#| label: fig-fva_nemenyi
#| echo: false
#| cache: true
#| out.width: "100%"
#| fig-width: 8
#| fig-height: 8
#| fig-cap: "Nemenyi post-hoc test with 95% confidence level on inverted FVA values from the empirical evaluation."

fva_tidy <- num_ex_metrics_all |> 
  select(origin, product_code, site_code, model, fva) |>
  drop_na() |> 
  distinct() |> 
  group_by(site_code, product_code, model) |> 
  summarise(fva = mean(fva), .groups = 'drop') |> 
  mutate(fva_inv = 1 - fva) |> 
  select(-fva) |> 
  pivot_wider(names_from = 'model', values_from = 'fva_inv') |> 
  select(-c(site_code, product_code))

par(mar = c(4, 0, 1, 0)) # Set the margins (bottom, left, top, right)

par(
  cex       = 1,
  cex.axis  = 2,
  cex.lab   = 1.5,
  cex.main  = 1
)

p2 <- nemenyi(fva_tidy, conf.level=0.95, plottype="vmcb", main = '')

```

## Overall inventory performance

`Existing mean based order-up-to level`

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 65%; display: flex; justify-content: flex-start;"}

```{r}
#| echo: false

rel_iva |> 
  filter(target_csl == 'mean (s,3S)') |> 
  group_by(model, target_csl) |> 
  select(CSL_proxy, stockout_rate, avg_inv_eff, iva) |> 
  summarise(
    across(
      where(is.double),
      list(
        mean   = ~ round(mean(. , na.rm = TRUE), 3)
      ),
      .names = "{.col}"
    ),
    .groups = "drop"
  ) |> 
  select(-target_csl) |> 
  rename('Method' = model, 
         'Mean CSL' = CSL_proxy,
         'Mean Stockout Rate' = stockout_rate,
         'Mean Inventory Turnover' = avg_inv_eff,
         'Mean IVA' = iva) |> 
  arrange(desc(`Mean CSL`)) |> 
  mutate(across(everything(), as.character)) |>
  add_row(
    'Method'                         = "",
    'Mean CSL'                     = "",
    'Mean Stockout Rate'                      = "",
    'Mean Inventory Turnover'          = "",
    'Mean IVA' = ''
  ) |> 
  kbl(
    format     = "html",
    escape     = FALSE,
    table.attr = 'class="table-custom"',
    align      = "lrrrrr"
  ) |>
  kable_styling(full_width = FALSE, font_size = 28)

```

:::

::: {.column style="flex: 0 0 2.5%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}


:::

::: {.column style="flex: 0 0 32.5%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

⚠️ High CSL often comes at the cost of overstocking

📉 Low inventory does not always equal efficiency

✅ TCKF achieves the most efficient trade-off

:::

::::


## Overall inventory performance

`Quantile based order-up-to level`

```{r}
#| label: fig-inv_perf_q
#| echo: false
#| cache: true
#| out.width: "100%"
#| fig-width: 25
#| fig-height: 12
#| fig-cap: "Inventory performance under the quantile-based order-up-to level policy from the empirical evaluation."
#| fig-subcap: 'Achieved CSL; (b) stockout rate; (c) inventory turnover; (d) relative CSL vs. TCKF; (e) relative stockout rate vs. TCKF; (f) relative inventory turnover vs. TCKF'

plot2_df <- rel_iva |> 
  select(site_code, product_code, model, target_csl, avg_inv_eff_va, csl_va, stockout_rate_va, iva) |> 
  distinct() |> 
  filter(target_csl != 'mean (s,3S)') |> 
  pivot_longer(
    cols = c(avg_inv_eff_va, csl_va, stockout_rate_va, iva),
    names_to  = "measure",
    values_to = "value"
  ) |>
  mutate(
    measure = factor(
      measure,
      levels = c("csl_va", 'stockout_rate_va', 'avg_inv_eff_va', 'iva'),
      labels = c(
        "Rel CSL",
        "Rel Stockout Rate",
        "Rel Inventory Turnover",
        'Inventory Value Added')
    )
  ) |> 
  drop_na() 

# Achived csl

p1 <- plot2_df |> 
  filter(measure == "Rel CSL") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.75,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  
  labs(x = NULL,
       y = "Rel CSL",
       fill = "Method",
       colour = "Method",
       caption = '(d)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  ) 

# stockout rate

p2 <- plot2_df |> 
  filter(measure == "Rel Stockout Rate") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
 stat_summary(fun       = mean,
               geom      = "point",
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  
  labs(x = NULL,
       y = "Rel Stockout Rate",
       fill = "Method",
       colour = "Method",
       caption = '(e)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  ) 


# Inventory turn over

p3 <- plot2_df |> 
  filter(measure == "Rel Inventory Turnover") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               # shape     = 21,
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  
  labs(x = NULL,
       y = "Rel Inventory Turnover",
       fill = "Method",
       colour = "Method",
       caption = '(f)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  )  
# coord_cartesian(ylim = c(-2, 0))

# actuals

plot3_df <- rel_iva |> 
  select(site_code, product_code, model, target_csl, avg_inv_eff, CSL_proxy, stockout_rate, iva) |> 
  distinct() |> 
  filter(target_csl != 'mean (s,3S)') |> 
  pivot_longer(
    cols = c(avg_inv_eff, CSL_proxy, stockout_rate, iva),
    names_to  = "measure",
    values_to = "value"
  ) |>
  mutate(
    measure = factor(
      measure,
      levels = c("CSL_proxy", 'stockout_rate', 'avg_inv_eff', 'iva'),
      labels = c(
        "Rel CSL",
        "Rel Stockout Rate",
        "Rel Inventory Turnover",
        'Inventory Value Added')
    )
  ) |> 
  drop_na()

p1a <- plot3_df |> 
  filter(measure == "Rel CSL") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  labs(x = NULL,
       y = "Achieved CSL",
       fill = "Method",
       colour = "Method",
       caption = '(a)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  ) 

# stockout rate

p2a <- plot3_df |> 
  filter(measure == "Rel Stockout Rate") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  
  labs(x = NULL,
       y = "Stockout Rate",
       fill = "Method",
       colour = "Method",
       caption = '(b)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  ) 


# Inventory turn over

p3a <- plot3_df |> 
  filter(measure == "Rel Inventory Turnover") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               # shape     = 21,
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +   
  geom_hline(
    yintercept = 1,
    linetype   = "dashed",
    color      = "grey50",
    size       = 0.5
  ) +
  
  labs(x = NULL,
       y = "Inventory Turnover",
       fill = "Method",
       colour = "Method",
       caption = '(c)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  )  
# coord_cartesian(ylim = c(0, 2))


(p1a | p2a | p3a) / (p1 | p2 | p3) +
  plot_layout(guides = "collect") &
  theme(legend.position = "right")

```

## Overall inventory performance

`Quantile based order-up-to level`

```{r}
#| label: fig-inv_perf_iva
#| echo: false
#| cache: true
#| out.width: "100%"
#| fig-width: 25
#| fig-height: 12
#| fig-cap: "Inventory Value Added (IVA) vs. TCKF. under the quantile-based order-up-to level policy from the empirical evaluation."

plot2_df |> 
  filter(measure == "Inventory Value Added") |> 
  ggplot(aes(y = value,                      
             x = factor(target_csl),         
             fill   = model,
             colour = model,
             shape = model,
             group  = interaction(target_csl, model))) +
  stat_summary(fun       = mean,
               geom      = "point",
               # shape     = 21,
               size      = 3,
               fill      = "white",
               stroke    = 1.5,
               position  = position_dodge2(width = 0.15, padding = 0.1)) +
  stat_summary(fun  = mean,
               geom = "line",
               aes(group = model),            
               linewidth = 1.5,
               position = position_dodge2(width = 0.15, padding = 0.1),
               show.legend = FALSE) +         
  labs(x = "Inventory policy",
       y = "IVA",
       fill = "Method",
       colour = "Method",
       caption = '(g)') +
  scale_colour_manual(name = "Method", values = pal) +
  scale_fill_manual(name = "Method", values = pal) +
  scale_shape_manual(name = "Method", values = c(1:17)) +
  theme_few(base_family = "Assistant", base_size = 40) +
  theme(
    legend.position  = "right",
    strip.text = element_text(face = "bold"),     
    axis.title = element_text(size = 40, face = "bold"),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing = unit(0.5, "lines")
  ) 
  # coord_cartesian(ylim = c(-1, 1))

```
## Healthcare metrics

```{r}
#| label: fig-health
#| echo: false
#| cache: true
#| out.width: "100%"
#| fig-width: 16
#| fig-height: 8
#| fig-cap: "mCRP loss the empirical evaluation, based on relative stockout loss compared to the TCKF."


method_count <- 9
wra_population <- 1590000


healthcare_impact <- rel_iva |> 
  select(site_code, product_code, model, target_csl, stockout_rate) |> 
  distinct() |> 
  
  left_join(rel_iva |> 
              filter(model == 'TCKF') |> 
              select(site_code, product_code, target_csl, stockout_rate) |> 
              distinct() |> 
              rename(stockout_rate_bench = stockout_rate),
            by = c('site_code', 'product_code', 'target_csl')) |> 
  mutate(mcpr_loss = round(0.065 * method_count * (stockout_rate - stockout_rate_bench),3),
         users_lost = mcpr_loss * wra_population,
         maternal_deaths = users_lost / 3153,
         infant_deaths = users_lost / 251,
         abortions = users_lost / 6.46,
         unintended_pregnancies = users_lost / 3.63)


df_rel <- healthcare_impact |>
  group_by(target_csl, model) |>
  summarise(mcpr_loss = round(mean(mcpr_loss, na.rm = TRUE), 3),
            users_lost = round(mean(users_lost, na.rm = TRUE)),
            infant_deaths = round(mean(infant_deaths, na.rm = TRUE)),
            abortions  = round(mean(abortions, na.rm = TRUE)),
            unintended_pregnancies = round(mean(unintended_pregnancies, na.rm = TRUE)),
            .groups = 'drop')

df_rel |>
  ggplot(aes(
    y     = model,                
    x     = mcpr_loss,            
    fill  = factor(target_csl)    
  )) +
  geom_col(
    position = position_dodge(width = 0.8),
    colour   = "black",
    width    = 1
  ) +
  labs(
    y     = "Method",
    x     = "Rel mCPR Loss",
    fill  = "Inventory Policy"
  ) +
  scale_fill_viridis_d(option = "viridis", end = 0.95, direction = -1) +
  scale_x_continuous(
    breaks = seq(-0.1, 0.1, by = 0.01),  # adjust range to your data
    labels = scales::label_percent(
      accuracy = 1, 
      scale = 100, 
      suffix = "%", 
      prefix = "", 
      big.mark = "", 
      style_negative = "minus", 
      force_sign = TRUE
    )
  ) +
  theme_few(base_family = "Assistant", base_size = 30) +
  theme(
    legend.position   = "right",
    strip.text        = element_text(face = "bold"),
    axis.title        = element_text(size = 30, face = "bold"),
    panel.grid.minor  = element_blank(),
    panel.border      = element_rect(colour = "lightgrey", fill = NA),
    panel.spacing     = unit(0.5, "lines")
  )


```


## Illustrative impact: `Why forecast quality matters`

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: flex-start;"}
<img src="images/story_3.png"
     alt="Outline graphic"
     style="max-width: 100%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

In Côte d’Ivoire, `~1.59 million women` use modern contraceptives (Track20). 

<br>

Replacing TCKF with the current LMIS forecast under a q95 inventory policy would lead to:

🔻 reduce 18,599 additional women losing access

<span style="color:red;">➕ </span>save 5,124 unintended pregnancies

<span style="color:red;">➕ </span>save 5,879 abortions

<span style="color:red;">➕ </span>save 54 infant deaths

:::

::::

::: aside
Image generated using 04-mini-high
:::

# WHAT NEXT {background-color="#4D59AC"}

##  What matters: `linking forecasts, inventory & health impact`

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: left;"}
<img src="images/story_1a.png"
     alt="Story panel"
     style="max-width: 100%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}


📌 `Forecast accuracy ≠ forecast value  `

Most models focus on error metrics, but ignore censorship, uncertainty, and how forecasts are used.  

---

📦 `High service ≠ high performance` 

Demand Planner & System Forecast look strong, but **hide poor forecasts behind excess inventory**. 

---

❤️ `Forecast quality drives public health  `

Under lean policies (q80–q95), poor forecasts → more stockouts → more harm.  

:::

::::

::: aside
Image generated using 04-mini-high
:::



## Key contributions & implications

<br>

:::: {.columns style="display: flex; align-items: center;"}

::: {.column-left style="flex: 0 0 45%; display: flex; justify-content: left;"}
<img src="images/story_5.png"
     alt="Story panel"
     style="max-width: 90%; height: auto; display: block;" />
:::

::: {.column style="flex: 0 0 55%; display: flex; flex-direction: column; justify-content: flex-start; text-align: left;"}

::: {.step1}
<div class="step-content">
  <h3>Addressing Censored Demand</h3>
  <p>
    TCKF explicitly accounts for stockouts and service interruptions by reconstructing true demand.
  </p>
</div>
:::

::: {.step1}
<div class="step-content">
  <h3>Forecasts Aligned with Inventory</h3>
  <p>
    Our study links forecasting with inventory decisions and public health outcomes.
  </p>
</div>
:::

::: {.step1}
<div class="step-content">
  <h3>Improved Inventory Efficiency</h3>
  <p>
    By reducing stockouts without overstocking, TCKF enhances both service levels and inventory turnover.
  </p>
</div>
:::

::: {.step1}
<div class="step-content">
  <h3>Practical Value for Planners &amp; Donors</h3>
  <p>
    TCKF enables risk-aware, evidence-based planning — particularly valuable under resource constraints, such as the phasing out of USAID support.
  </p>
</div>
:::

::: {.step1}
<div class="step-content">
  <h3>Reproducibility &amp; Extendability</h3>
  <p>
    The full pipeline is openly implemented in R using both synthetic and empirical LMIS data, supporting reproducibility.
  </p>
</div>
:::


:::

::::

::: aside
Image generated using 04-mini-high
:::

# Any questions or thoughts? 💬

![](images/follow_us.png){fig-align="center"}